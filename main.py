import streamlit as st
from datetime import date

import yfinance as yf
from fbprophet import Prophet
from fbprophet.plot import plot_plotly
from plotly import graph_objs as go


START = "2010-01-01"
TODAY = date.today().strftime("%Y-%m-%d")

st.title("Stock Prediction App")

stocks = (['3MINDIA.NS',
 'ABB.NS',
 'POWERINDIA.NS',
 'ACC.NS',
 'AIAENG.NS',
 'APLAPOLLO.NS',
 'AUBANK.NS',
 'AARTIDRUGS.NS',
 'AARTIIND.NS',
 'AAVAS.NS',
 'ABBOTINDIA.NS',
 'ADANIENT.NS',
 'ADANIGREEN.NS',
 'ADANIPORTS.NS',
 'ATGL.NS',
 'ADANITRANS.NS',
 'ABCAPITAL.NS',
 'ABFRL.NS',
 'ADVENZYMES.NS',
 'AEGISCHEM.NS',
 'AFFLE.NS',
 'AJANTPHARM.NS',
 'ALEMBICLTD.NS',
 'APLLTD.NS',
 'ALKEM.NS',
 'ALKYLAMINE.NS',
 'ALOKINDS.NS',
 'AMARAJABAT.NS',
 'AMBER.NS',
 'AMBUJACEM.NS',
 'ANGELONE.NS',
 'ANURAS.NS',
 'APOLLOHOSP.NS',
 'APOLLOTYRE.NS',
 'ASAHIINDIA.NS',
 'ASHOKLEY.NS',
 'ASHOKA.NS',
 'ASIANPAINT.NS',
 'ASTERDM.NS',
 'ASTRAZEN.NS',
 'ASTRAL.NS',
 'ATUL.NS',
 'AUROPHARMA.NS',
 'AVANTIFEED.NS',
 'DMART.NS',
 'AXISBANK.NS',
 'BASF.NS',
 'BEML.NS',
 'BSE.NS',
 'BAJAJ-AUTO.NS',
 'BAJAJCON.NS',
 'BAJAJELEC.NS',
 'BAJFINANCE.NS',
 'BAJAJFINSV.NS',
 'BAJAJHLDNG.NS',
 'BALAMINES.NS',
 'BALKRISIND.NS',
 'BALRAMCHIN.NS',
 'BANDHANBNK.NS',
 'BANKBARODA.NS',
 'BANKINDIA.NS',
 'MAHABANK.NS',
 'BATAINDIA.NS',
 'BAYERCROP.NS',
 'BERGEPAINT.NS',
 'BDL.NS',
 'BEL.NS',
 'BHARATFORG.NS',
 'BHEL.NS',
 'BPCL.NS',
 'BHARATRAS.NS',
 'BHARTIARTL.NS',
 'BIOCON.NS',
 'BIRLACORPN.NS',
 'BSOFT.NS',
 'BLUEDART.NS',
 'BLUESTARCO.NS',
 'BBTC.NS',
 'BOSCHLTD.NS',
 'BRIGADE.NS',
 'BRITANNIA.NS',
 'BURGERKING.NS',
 'CCL.NS',
 'CESC.NS',
 'CGPOWER.NS',
 'CRISIL.NS',
 'CSBBANK.NS',
 'CADILAHC.NS',
 'CANFINHOME.NS',
 'CANBK.NS',
 'CAPLIPOINT.NS',
 'CGCL.NS',
 'CARBORUNIV.NS',
 'CASTROLIND.NS',
 'CEATLTD.NS',
 'CENTRALBK.NS',
 'CDSL.NS',
 'CENTURYPLY.NS',
 'CENTURYTEX.NS',
 'CERA.NS',
 'CHALET.NS',
 'CHAMBLFERT.NS',
 'CHOLAHLDNG.NS',
 'CHOLAFIN.NS',
 'CIPLA.NS',
 'CUB.NS',
 'COALINDIA.NS',
 'COCHINSHIP.NS',
 'COFORGE.NS',
 'COLPAL.NS',
 'CAMS.NS',
 'CONCOR.NS',
 'COROMANDEL.NS',
 'CREDITACC.NS',
 'CROMPTON.NS',
 'CUMMINSIND.NS',
 'CYIENT.NS',
 'DCBBANK.NS',
 'DCMSHRIRAM.NS',
 'DLF.NS',
 'DABUR.NS',
 'DALBHARAT.NS',
 'DEEPAKNTR.NS',
 'DELTACORP.NS',
 'DHANI.NS',
 'DHANUKA.NS',
 'DBL.NS',
 'DIVISLAB.NS',
 'DIXON.NS',
 'LALPATHLAB.NS',
 'DRREDDY.NS',
 'EIDPARRY.NS',
 'EIHOTEL.NS',
 'EPL.NS',
 'EDELWEISS.NS',
 'EICHERMOT.NS',
 'ELGIEQUIP.NS',
 'EMAMILTD.NS',
 'ENDURANCE.NS',
 'ENGINERSIN.NS',
 'EQUITAS.NS',
 'EQUITASBNK.NS',
 'ERIS.NS',
 'ESCORTS.NS',
 'EXIDEIND.NS',
 'FDC.NS',
 'FEDERALBNK.NS',
 'FACT.NS',
 'FINEORG.NS',
 'FINCABLES.NS',
 'FINPIPE.NS',
 'FSL.NS',
 'FORTIS.NS',
 'FRETAIL.NS',
 'GAIL.NS',
 'GMMPFAUDLR.NS',
 'GALAXYSURF.NS',
 'GARFIBRES.NS',
 'GICRE.NS',
 'GILLETTE.NS',
 'GLAND.NS',
 'GLAXO.NS',
 'GLENMARK.NS',
 'GODFRYPHLP.NS',
 'GODREJAGRO.NS',
 'GODREJCP.NS',
 'GODREJIND.NS',
 'GODREJPROP.NS',
 'GRANULES.NS',
 'GRAPHITE.NS',
 'GRASIM.NS',
 'GESHIP.NS',
 'GREAVESCOT.NS',
 'GRINDWELL.NS',
 'GUJALKALI.NS',
 'GAEL.NS',
 'FLUOROCHEM.NS',
 'GUJGASLTD.NS',
 'GNFC.NS',
 'GPPL.NS',
 'GSFC.NS',
 'GSPL.NS',
 'HEG.NS',
 'HCLTECH.NS',
 'HDFCAMC.NS',
 'HDFCBANK.NS',
 'HDFCLIFE.NS',
 'HFCL.NS',
 'HAPPSTMNDS.NS',
 'HATHWAY.NS',
 'HATSUN.NS',
 'HAVELLS.NS',
 'HEIDELBERG.NS',
 'HEMIPROP.NS',
 'HEROMOTOCO.NS',
 'HIKAL.NS',
 'HINDALCO.NS',
 'HGS.NS',
 'HAL.NS',
 'HINDCOPPER.NS',
 'HINDPETRO.NS',
 'HINDUNILVR.NS',
 'HINDZINC.NS',
 'HOMEFIRST.NS',
 'HONAUT.NS',
 'HUDCO.NS',
 'HDFC.NS',
 'ICICIBANK.NS',
 'ICICIGI.NS',
 'ICICIPRULI.NS',
 'ISEC.NS',
 'IDBI.NS',
 'IDFCFIRSTB.NS',
 'IDFC.NS',
 'IFBIND.NS',
 'IIFL.NS',
 'IIFLWAM.NS',
 'IOLCP.NS',
 'IRB.NS',
 'IRCON.NS',
 'ITC.NS',
 'ITI.NS',
 'INDIACEM.NS',
 'IBULHSGFIN.NS',
 'IBREALEST.NS',
 'INDIAMART.NS',
 'INDIANB.NS',
 'IEX.NS',
 'INDHOTEL.NS',
 'IOC.NS',
 'IOB.NS',
 'IRCTC.NS',
 'IRFC.NS',
 'INDIGOPNTS.NS',
 'ICIL.NS',
 'INDOCO.NS',
 'IGL.NS',
 'INDUSTOWER.NS',
 'INDUSINDBK.NS',
 'INFIBEAM.NS',
 'NAUKRI.NS',
 'INFY.NS',
 'INGERRAND.NS',
 'INOXLEISUR.NS',
 'INTELLECT.NS',
 'INDIGO.NS',
 'IPCALAB.NS',
 'JBCHEPHARM.NS',
 'JKCEMENT.NS',
 'JKLAKSHMI.NS',
 'JKPAPER.NS',
 'JKTYRE.NS',
 'JMFINANCIL.NS',
 'JSWENERGY.NS',
 'JSWSTEEL.NS',
 'JAMNAAUTO.NS',
 'JINDALSAW.NS',
 'JSLHISAR.NS',
 'JSL.NS',
 'JINDALSTEL.NS',
 'JCHAC.NS',
 'JUBLFOOD.NS',
 'JUBLINGREA.NS',
 'JUBLPHARMA.NS',
 'JUSTDIAL.NS',
 'JYOTHYLAB.NS',
 'KPRMILL.NS',
 'KEI.NS',
 'KNRCON.NS',
 'KPITTECH.NS',
 'KRBL.NS',
 'KSB.NS',
 'KAJARIACER.NS',
 'KALPATPOWR.NS',
 'KALYANKJIL.NS',
 'KANSAINER.NS',
 'KARURVYSYA.NS',
 'KSCL.NS',
 'KEC.NS',
 'KOTAKBANK.NS',
 'L&TFH.NS',
 'LTTS.NS',
 'LICHSGFIN.NS',
 'LAOPALA.NS',
 'LAXMIMACH.NS',
 'LTI.NS',
 'LT.NS',
 'LAURUSLABS.NS',
 'LXCHEM.NS',
 'LEMONTREE.NS',
 'LINDEINDIA.NS',
 'LUPIN.NS',
 'LUXIND.NS',
 'MMTC.NS',
 'MOIL.NS',
 'MRF.NS',
 'LODHA.NS',
 'MGL.NS',
 'M&MFIN.NS',
 'M&M.NS',
 'MAHINDCIE.NS',
 'MHRIL.NS',
 'MAHLOG.NS',
 'MANAPPURAM.NS',
 'MRPL.NS',
 'MARICO.NS',
 'MARUTI.NS',
 'MASTEK.NS',
 'MFSL.NS',
 'MAXHEALTH.NS',
 'MAZDOCK.NS',
 'METROPOLIS.NS',
 'MINDTREE.NS',
 'MINDACORP.NS',
 'MINDAIND.NS',
 'MIDHANI.NS',
 'MOTILALOFS.NS',
 'MPHASIS.NS',
 'MCX.NS',
 'MUTHOOTFIN.NS',
 'NATCOPHARM.NS',
 'NBCC.NS',
 'NCC.NS',
 'NESCO.NS',
 'NHPC.NS',
 'NLCINDIA.NS',
 'NMDC.NS',
 'NOCIL.NS',
 'NTPC.NS',
 'NH.NS',
 'NATIONALUM.NS',
 'NFL.NS',
 'NAVINFLUOR.NS',
 'NAZARA.NS',
 'NESTLEIND.NS',
 'NETWORK18.NS',
 'NILKAMAL.NS',
 'NAM-INDIA.NS',
 'OBEROIRLTY.NS',
 'ONGC.NS',
 'OIL.NS',
 'OFSS.NS',
 'ORIENTELEC.NS',
 'PIIND.NS',
 'PNBHOUSING.NS',
 'PNCINFRA.NS',
 'PVR.NS',
 'PAGEIND.NS',
 'PERSISTENT.NS',
 'PETRONET.NS',
 'PFIZER.NS',
 'PHILIPCARB.NS',
 'PHOENIXLTD.NS',
 'PIDILITIND.NS',
 'PEL.NS',
 'POLYMED.NS',
 'POLYCAB.NS',
 'POLYPLEX.NS',
 'POONAWALLA.NS',
 'PFC.NS',
 'POWERGRID.NS',
 'PRAJIND.NS',
 'PRESTIGE.NS',
 'PRINCEPIPE.NS',
 'PRSMJOHNSN.NS',
 'PGHL.NS',
 'PGHH.NS',
 'PNB.NS',
 'QUESS.NS',
 'RBLBANK.NS',
 'RECLTD.NS',
 'RHIM.NS',
 'RITES.NS',
 'RADICO.NS',
 'RVNL.NS',
 'RAILTEL.NS',
 'RAIN.NS',
 'RAJESHEXPO.NS',
 'RALLIS.NS',
 'RCF.NS',
 'RATNAMANI.NS',
 'REDINGTON.NS',
 'RELAXO.NS',
 'RELIANCE.NS',
 'ROSSARI.NS',
 'ROUTE.NS',
 'SBICARD.NS',
 'SBILIFE.NS',
 'SIS.NS',
 'SJVN.NS',
 'SKFINDIA.NS',
 'SRF.NS',
 'SANOFI.NS',
 'SCHAEFFLER.NS',
 'SCHNEIDER.NS',
 'SEQUENT.NS',
 'SHARDACROP.NS',
 'SFL.NS',
 'SHILPAMED.NS',
 'SCI.NS',
 'SHREECEM.NS',
 'SHRIRAMCIT.NS',
 'SRTRANSFIN.NS',
 'SIEMENS.NS',
 'SOBHA.NS',
 'SOLARINDS.NS',
 'SOLARA.NS',
 'SONACOMS.NS',
 'SONATSOFTW.NS',
 'SPANDANA.NS',
 'SPICEJET.NS',
 'STARCEMENT.NS',
 'SBIN.NS',
 'SAIL.NS',
 'SWSOLAR.NS',
 'STLTECH.NS',
 'STAR.NS',
 'SUDARSCHEM.NS',
 'SUMICHEM.NS',
 'SPARC.NS',
 'SUNPHARMA.NS',
 'SUNTV.NS',
 'SUNDARMFIN.NS',
 'SUNDRMFAST.NS',
 'SUNTECK.NS',
 'SUPRAJIT.NS',
 'SUPREMEIND.NS',
 'SUPPETRO.NS',
 'SUVENPHAR.NS',
 'SUZLON.NS',
 'SYMPHONY.NS',
 'SYNGENE.NS',
 'TCIEXP.NS',
 'TCNSBRANDS.NS',
 'TTKPRESTIG.NS',
 'TV18BRDCST.NS',
 'TVSMOTOR.NS',
 'TANLA.NS',
 'TASTYBITE.NS',
 'TATACHEM.NS',
 'TATACOFFEE.NS',
 'TATACOMM.NS',
 'TCS.NS',
 'TATACONSUM.NS',
 'TATAELXSI.NS',
 'TATAMTRDVR.NS',
 'TATAMOTORS.NS',
 'TATAPOWER.NS',
 'TATASTLLP.NS',
 'TATASTEEL.NS',
 'TTML.NS',
 'TEAMLEASE.NS',
 'TECHM.NS',
 'NIACL.NS',
 'RAMCOCEM.NS',
 'THERMAX.NS',
 'THYROCARE.NS',
 'TIMKEN.NS',
 'TITAN.NS',
 'TORNTPHARM.NS',
 'TORNTPOWER.NS',
 'TRENT.NS',
 'TRIDENT.NS',
 'TRITURBINE.NS',
 'TIINDIA.NS',
 'UCOBANK.NS',
 'UFLEX.NS',
 'UPL.NS',
 'UTIAMC.NS',
 'UJJIVAN.NS',
 'UJJIVANSFB.NS',
 'ULTRACEMCO.NS',
 'UNIONBANK.NS',
 'UBL.NS',
 'MCDOWELL-N.NS',
 'VGUARD.NS',
 'VMART.NS',
 'VIPIND.NS',
 'VAIBHAVGBL.NS',
 'VAKRANGEE.NS',
 'VALIANTORG.NS',
 'VTL.NS',
 'VARROC.NS',
 'VBL.NS',
 'VEDL.NS',
 'VENKEYS.NS',
 'VINATIORGA.NS',
 'IDEA.NS',
 'VOLTAS.NS',
 'WABCOINDIA.NS',
 'WELCORP.NS',
 'WELSPUNIND.NS',
 'WESTLIFE.NS',
 'WHIRLPOOL.NS',
 'WIPRO.NS',
 'WOCKPHARMA.NS',
 'YESBANK.NS',
 'ZEEL.NS',
 'ZENSARTECH.NS',
 'ZYDUSWELL.NS',
 'ECLERX.NS'])



stock = st.selectbox("Select stock For Preduction",stocks)



n_years = st.slider('Years of prediction:', 1, 4)
period = n_years * 365


@st.cache
def load_data(ticker):
    data = yf.download(ticker, START, TODAY)
    data.reset_index(inplace=True)
    return data

	
data_load_state = st.text('Loading data...')
data = load_data(stock)
data_load_state.text('Loading data... done!')

st.subheader('Raw data')
st.write(data.tail())

# Plot raw data
def plot_raw_data():
	fig = go.Figure()
	fig.add_trace(go.Scatter(x=data['Date'], y=data['Open'], name="stock_open"))
	fig.add_trace(go.Scatter(x=data['Date'], y=data['Close'], name="stock_close"))
	fig.layout.update(title_text='Time Series data with Rangeslider', xaxis_rangeslider_visible=True)
	st.plotly_chart(fig)
	
plot_raw_data()

# Predict forecast with Prophet.
df_train = data[['Date','Close']]
df_train = df_train.rename(columns={"Date": "ds", "Close": "y"})

m = Prophet()
m.fit(df_train)
future = m.make_future_dataframe(periods=period)
forecast = m.predict(future)

# Show and plot forecast
st.subheader('Forecast data')
st.write(forecast.tail())
    
st.write(f'Forecast plot for {n_years} years')
fig1 = plot_plotly(m, forecast)
st.plotly_chart(fig1)

st.write("Forecast components")
fig2 = m.plot_components(forecast)
st.write(fig2)

